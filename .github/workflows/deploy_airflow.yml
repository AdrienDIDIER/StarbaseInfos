name: Build & Deploy Airflow + Watcher

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest

      - name: Set image names (lowercase)
        run: |
          REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "AIRFLOW_IMAGE=ghcr.io/${REPO_LC}-airflow" >> $GITHUB_ENV
          echo "WATCHER_IMAGE=ghcr.io/${REPO_LC}-watcher" >> $GITHUB_ENV
          echo "SHA_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "Using images: $AIRFLOW_IMAGE and $WATCHER_IMAGE"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build & push Airflow
      - name: Build & Push Airflow image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.AIRFLOW_IMAGE }}:prod
            ${{ env.AIRFLOW_IMAGE }}:${{ env.SHA_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build & push Watcher
      - name: Build & Push Watcher image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.watcher
          push: true
          tags: |
            ${{ env.WATCHER_IMAGE }}:prod
            ${{ env.WATCHER_IMAGE }}:${{ env.SHA_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Validate required secrets
        run: |
          test -n "${{ secrets.VPS_HOST }}" || (echo "❌ VPS_HOST is empty" && exit 1)
          test -n "${{ secrets.VPS_USER }}" || (echo "❌ VPS_USER is empty" && exit 1)
          test -n "${{ secrets.VPS_SSH_KEY }}" || (echo "❌ VPS_SSH_KEY is empty" && exit 1)
          test -n "${{ secrets.GHCR_PAT }}" || (echo "❌ GHCR_PAT is empty" && exit 1)

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.VPS_HOST }}" >> ~/.ssh/known_hosts

      - name: Pull & Restart on VPS
        env:
          OWNER: ${{ github.repository_owner }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} /bin/bash << 'EOF'
          set -euo pipefail
          # login GHCR (le secret sera masqué dans les logs)
          echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.repository_owner }}" --password-stdin
          docker compose -f /opt/airflow/docker-compose.yml pull
          docker compose -f /opt/airflow/docker-compose.yml up -d --remove-orphans
          docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Image}}'
          EOF
