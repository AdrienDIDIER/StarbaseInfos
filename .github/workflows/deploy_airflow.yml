name: Build & Deploy Airflow
on:
  push:
    branches: [ "main" ]  # ajuste si besoin

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      # 1) Buildx pour activer le cache GHA
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest

      # 2) Construire le nom d'image en MINUSCULES
      - name: Set IMAGE env (lowercase)
        run: |
          REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE=ghcr.io/${REPO_LC}-airflow:prod" >> $GITHUB_ENV
          echo "Using image: $IMAGE"

      # 3) Login GHCR pour push
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4) Build & Push (avec cache GHA)
      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 5) SSH vers le VPS
      - name: Validate required secrets
        run: |
          test -n "${{ secrets.VPS_HOST }}" || (echo "❌ VPS_HOST is empty" && exit 1)
          test -n "${{ secrets.VPS_USER }}" || (echo "❌ VPS_USER is empty" && exit 1)
          test -n "${{ secrets.VPS_SSH_KEY }}" || (echo "❌ VPS_SSH_KEY is empty" && exit 1)
          test -n "${{ secrets.GHCR_PAT }}" || (echo "❌ GHCR_PAT is empty" && exit 1)

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.VPS_HOST }}" >> ~/.ssh/known_hosts

      # 6) Mettre à jour l'image dans le compose et redémarrer
      - name: Pull & Restart on VPS
        env:
          OWNER: ${{ github.repository_owner }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} /bin/bash << EOF
          set -euo pipefail
          docker login ghcr.io -u "$OWNER" -p "$GHCR_PAT"
          docker compose -f /opt/airflow/docker-compose.yml pull
          docker compose -f /opt/airflow/docker-compose.yml up -d
          EOF
